<Page x:Class="ProjectSBS.Presentation.Components.ItemDetails"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:ProjectSBS.Presentation.Components"
      xmlns:models="using:ProjectSBS.Business.Models"
      xmlns:toolkit="using:CommunityToolkit.WinUI"
      xmlns:converters="using:CommunityToolkit.WinUI.Converters"
      xmlns:localConverters="using:ProjectSBS.Business.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:sys="ProjectSBS:System;assembly=System.Private.CoreLib"
      xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:android="http://uno.ui/android"
      mc:Ignorable="d android">

  <Page.Resources>
    <MenuFlyout x:Key="MoreFlyout">
      <MenuFlyoutItem Text="Archive"
                      Icon="{toolkit:FontIcon Glyph=&#xE7B8;}"
                      Padding="100, 16"
                      Command="{Binding GoToSettingsCommand}" />

      <!--<MenuFlyoutItem Text="Delete"
                      Icon="{toolkit:FontIcon Glyph=&#xE74D;}"
                      Padding="100, 16
                      Command="{x:Bind ViewModel.DeleteCommand}" />-->
    </MenuFlyout>

    <Style x:Key="ContentStack"
           TargetType="StackPanel">
      <Setter Property="Padding"
              Value="12, 12" />
    </Style>

    <converters:StringFormatConverter x:Key="StringFormatConverter" />
    <localConverters:ColorToBrushConverter x:Key="ColorToBrushConverter" />

  </Page.Resources>

  <local:PageShell MobileTitleVisibility="Visible"
                   Title="{x:Bind ViewModel.ItemName, Mode=OneWay}"
                   BackCommand="{x:Bind ViewModel.CloseCommand}">
    <local:PageShell.ActionBar>

      <StackPanel Orientation="Horizontal"
                  Spacing="4"
                  Grid.Column="1">
        <Button Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                Padding="12"
                VerticalAlignment="Top"
                Visibility="{x:Bind ViewModel.IsEditing, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                Command="{x:Bind ViewModel.EnableEditingCommand}">

          <SymbolIcon Symbol="Edit" />
        </Button>

        <Button Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                Padding="12"
                VerticalAlignment="Top"
                Visibility="{x:Bind ViewModel.IsEditing, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                Flyout="{StaticResource MoreFlyout}">

          <SymbolIcon Symbol="More"
                      RenderTransformOrigin=".5,.5">
            <SymbolIcon.RenderTransform>
              <RotateTransform Angle="90" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
        </Button>
      </StackPanel>

    </local:PageShell.ActionBar>

    <local:PageShell.ContentView>

      <UserControl>
        <Grid>
          <VisualStateManager.VisualStateGroups>
            <!--AdaptiveTriggers-->
            <VisualStateGroup>
              <VisualState>
                <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>

                <VisualState.Setters>
                  <Setter Target="desktopHeader.Visibility"
                          Value="Collapsed" />
                </VisualState.Setters>
              </VisualState>

              <VisualState>
                <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="640" />
                </VisualState.StateTriggers>
              </VisualState>
            </VisualStateGroup>

          </VisualStateManager.VisualStateGroups>

          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <Grid x:Name="desktopHeader"
                Visibility="Visible"
                Padding="12,12,12,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="{x:Bind ViewModel.ItemName, Mode=OneWay}"
                       Style="{StaticResource TitleTextBlockStyle}"
                       Grid.ColumnSpan="2"
                       Grid.Row="1" />

            <StackPanel Orientation="Horizontal"
                        Spacing="8"
                        Grid.Column="1">
              <Button Visibility="{x:Bind ViewModel.IsEditing, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                      Command="{Binding EnableEditingCommand}"
                      Padding="14, 10">
                <FontIcon Glyph="&#xE70F;"
                          FontSize="14" />
              </Button>

              <Button Visibility="{x:Bind ViewModel.IsEditing, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                      Command="{x:Bind ViewModel.DeleteCommand}"
                      Padding="14, 10">
                <FontIcon Glyph="&#xE74D;"
                          FontSize="14" />
              </Button>

              <Button Command="{x:Bind ViewModel.CloseCommand}"
                      Padding="14, 10">
                <FontIcon Glyph="&#xE8BB;"
                          FontSize="14" />
              </Button>
            </StackPanel>
          </Grid>

          <ScrollViewer Visibility="{x:Bind ViewModel.IsEditing, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                        Grid.Row="1">
            <StackPanel Spacing="8"
                        Style="{StaticResource ContentStack}">
              <win:StackPanel.ChildrenTransitions>
                <TransitionCollection>
                  <EntranceThemeTransition FromHorizontalOffset="80"
                                           FromVerticalOffset="0"
                                           IsStaggeringEnabled="False" />
                </TransitionCollection>
              </win:StackPanel.ChildrenTransitions>

              <Grid HorizontalAlignment="Left">
                <Rectangle Fill="{x:Bind ViewModel.SelectedItem.DisplayTag.Color, Mode=OneWay,Converter={StaticResource ColorToBrushConverter}}"
                           RadiusY="12"
                           RadiusX="12" />
                <TextBlock Text="{x:Bind ViewModel.SelectedItem.DisplayTag.Name, Mode=OneWay}"
                           Margin="12,3"
                           Style="{StaticResource CaptionTextBlockStyle}" />
              </Grid>

              <local:DetailsBox HeaderText="for the price of">
                <local:DetailsBox.Content>
                  <TextBlock TextWrapping="WrapWholeWords">
                      <Run Text="{x:Bind ViewModel.SelectedItem.Item.Billing.BasePrice, Mode=OneWay}" />
                      <Run Text="{x:Bind ViewModel.SelectedItem.Item.Billing.CurrencyId, Mode=OneWay}" />
                  </TextBlock>
                </local:DetailsBox.Content>
              </local:DetailsBox>

              <local:DetailsBox HeaderText="paid in total">
                <local:DetailsBox.Content>
                  <TextBlock TextWrapping="WrapWholeWords">
                      <Run Text="{x:Bind ViewModel.SelectedItem.TotalPrice, Mode=OneWay}" />
                      <Run Text="{x:Bind ViewModel.SelectedItem.Item.Billing.CurrencyId, Mode=OneWay}" />
                  </TextBlock>
                </local:DetailsBox.Content>
              </local:DetailsBox>

              <local:DetailsBox HeaderText="billing period"
                                Text="{x:Bind ViewModel.SelectedItem.Item.Billing.PeriodType, Mode=OneWay}" />

              <local:DetailsBox HeaderText="payment method"
                                Text="N/A" />

              <local:DetailsBox HeaderText="next payments">
                <local:DetailsBox.Content>
                  <ScrollViewer HorizontalScrollMode="Auto"
                                HorizontalScrollBarVisibility="Hidden"
                                Margin="-16"
                                Padding="16">
                    <ItemsRepeater VerticalAlignment="Top"
                                   ItemsSource="{x:Bind ViewModel.FuturePayments, Mode=OneWay}">
                      <ItemsRepeater.Layout>
                        <StackLayout Orientation="Horizontal"
                                     Spacing="8" />
                      </ItemsRepeater.Layout>
                    </ItemsRepeater>
                  </ScrollViewer>
                </local:DetailsBox.Content>
              </local:DetailsBox>

              <local:DetailsBox HeaderText="paying since"
                                Text="{x:Bind ViewModel.SelectedItem.Item.Billing.InitialDate, Mode=OneWay}" />

              <local:DetailsBox HeaderText="other">
                <local:DetailsBox.Content>
                  <StackPanel Orientation="Horizontal"
                              Spacing="12">
                    <local:ToggleIcon ToolTipService.ToolTip="Get notified"
                                      IsChecked="{x:Bind ViewModel.SelectedItem.Item.IsNotify, Mode=OneWay}"
                                      TrueIcon="{toolkit:FontIcon Glyph=&#xEA8F;}"
                                      FalseIcon="{toolkit:FontIcon Glyph=&#xE7ED;}" />
                  </StackPanel>
                </local:DetailsBox.Content>
              </local:DetailsBox>

              <local:DetailsBox HeaderText="description"
                                Visibility="{x:Bind ViewModel.SelectedItem.Item.Description, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}"
                                Text="{x:Bind ViewModel.SelectedItem.Item.Description, Mode=OneWay}" />

            </StackPanel>
          </ScrollViewer>

          <Grid Visibility="{x:Bind ViewModel.IsEditing, Mode=TwoWay, Converter={StaticResource TrueToVisibleConverter}}"
                RowSpacing="12"
                Grid.Row="1">
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ScrollViewer>
              <StackPanel Spacing="20"
                          Style="{StaticResource ContentStack}">

                <TextBox Header="Name"
                         Text="{x:Bind ViewModel.SelectedItem.Item.Name, Mode=TwoWay}"
                         MaxLength="400" />

                <Grid ColumnSpacing="8">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <NumberBox Header="Price"
                             Value="{Binding SelectedItem.Item.Billing.BasePrice, Mode=TwoWay, Converter={StaticResource DecimalToDoubleConverter}}"
                             SpinButtonPlacementMode="Inline"
                             Maximum="99999999999999"
                             Minimum="-9999999999999" />
                  <ComboBox VerticalAlignment="Bottom"
                            ItemsSource="{x:Bind ViewModel.Currencies, Mode=OneWay}"
                            SelectedItem="{x:Bind ViewModel.SelectedItem.Item.Billing.CurrencyId, Mode=TwoWay}"
                            Grid.Column="1" />
                </Grid>

                <!--TODO SelectedIndex is not future proof-->
                <ComboBox Header="Tag"
                          ItemsSource="{x:Bind ViewModel.Tags, Mode=OneTime}"
                          SelectedIndex="{x:Bind ViewModel.SelectedItem.Item.TagId, Mode=TwoWay}"
                          VerticalAlignment="Bottom"
                          HorizontalAlignment="Stretch">
                  <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="models:Tag">
                      <StackPanel Orientation="Horizontal"
                                  Spacing="12">
                        <Rectangle Fill="{x:Bind Color, Converter={StaticResource ColorToBrushConverter}}"
                                   Width="16"
                                   Height="16"
                                   RadiusX="4"
                                   RadiusY="4" />
                        <TextBlock Text="{x:Bind Name}" />
                      </StackPanel>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <CalendarDatePicker Header="Billing Date"
                                    Date="{x:Bind ViewModel.SelectedItem.Item.Billing.InitialDate, Mode=TwoWay, Converter={StaticResource DateOnlyToDateTimeOffsetConverter}}"
                                    HorizontalAlignment="Stretch" />

                <Grid ColumnSpacing="8">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <NumberBox Header="Repete every"
                             Value="{x:Bind ViewModel.SelectedItem.Item.Billing.RecurEvery, Mode=TwoWay}"
                             SpinButtonPlacementMode="Inline"
                             Maximum="999"
                             Minimum="0" />
                  <ComboBox VerticalAlignment="Bottom"
                            ItemsSource="{toolkit:EnumValues Type=models:Period}"
                            SelectedItem="{x:Bind ViewModel.SelectedItem.Item.Billing.PeriodType, Mode=TwoWay}"
                            Grid.Column="1" />
                </Grid>

                <Grid>
                  <!--TODO Add changing icon here-->
                  <CheckBox Content="Get notified"
                            IsChecked="{x:Bind ViewModel.SelectedItem.Item.IsNotify, Mode=TwoWay}" />
                  <local:ToggleIcon IsChecked="{x:Bind ViewModel.SelectedItem.Item.IsNotify, Mode=OneWay}"
                                    HorizontalAlignment="Right"
                                    TrueIcon="{toolkit:FontIcon Glyph=&#xEA8F;}"
                                    FalseIcon="{toolkit:FontIcon Glyph=&#xE7ED;}" />
                </Grid>

                <Grid>
                  <CheckBox Content="Split between people {NI}"
                            IsEnabled="False" />
                  <local:ToggleIcon IsChecked="True"
                                    HorizontalAlignment="Right"
                                    TrueIcon="{toolkit:FontIcon Glyph=&#xE713;}"
                                    FalseIcon="{toolkit:FontIcon Glyph=&#xE748;}" />
                </Grid>
                <TextBox Header="Description"
                         Text="{x:Bind ViewModel.SelectedItem.Item.Description, Mode=TwoWay}"
                         Height="120"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         MaxLength="999999" />
              </StackPanel>
            </ScrollViewer>

            <Button Content="{x:Bind ViewModel.SaveText, Mode=OneWay}"
                    Command="{x:Bind ViewModel.SaveCommand}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Height="42"
                    Margin="12"
                    Grid.Row="1" />

          </Grid>
        </Grid>
      </UserControl>

    </local:PageShell.ContentView>
  </local:PageShell>
</Page>
