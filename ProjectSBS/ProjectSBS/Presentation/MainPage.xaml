<Page x:Class="ProjectSBS.Presentation.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:ProjectSBS.Presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:not_win="http://uno.ui/not_win"
      xmlns:not_skia="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      mc:Ignorable="d not_win"
      xmlns:utu="using:Uno.Toolkit.UI"
      xmlns:comp="using:ProjectSBS.Presentation.Components"
      xmlns:converters="using:CommunityToolkit.WinUI.Converters"
      xmlns:models="using:ProjectSBS.Business.Models"
      xmlns:toolkit="using:CommunityToolkit.WinUI"
      xmlns:cme="using:ProjectSBS.Presentation.CustomMarkupExtensions">

  <comp:PageShell TitleBarTitle="{x:Bind ViewModel.Title}"
                  DesktopTitleVisibility="Visible">
    <comp:PageShell.ContentView>

      <UserControl>
        <Grid>
          <VisualStateManager.VisualStateGroups>

            <!--AdaptiveTriggers-->
            <VisualStateGroup>
              <VisualState x:Name="SmallScreen">
                <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>
                
                <VisualState.Setters>
                  <Setter Target="navigation.IsPaneToggleButtonVisible"
                          Value="False" />
                  <Setter Target="navigationBar.Visibility"
                          Value="Visible" />
                </VisualState.Setters>
              </VisualState>
              
              <VisualState x:Name="LargeScreen">
                <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="640" />
                </VisualState.StateTriggers>
              </VisualState>
            </VisualStateGroup>

            <!--Navigation flexibility-->
            <not_skia:VisualStateGroup>
              <VisualState>
                <VisualState.StateTriggers>
                  <toolkit:IsEqualStateTrigger Value="{Binding IsPaneOpen, ElementName=navigation, Mode=OneWay}"
                                               To="True" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                  <Setter Target="userButton.Visibility"
                          Value="Visible" />
                </VisualState.Setters>
              </VisualState>
              <VisualState>
                <VisualState.StateTriggers>
                  <toolkit:IsEqualStateTrigger Value="{Binding IsPaneOpen, ElementName=navigation, Mode=OneWay}"
                                               To="False" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                  <Setter Target="userButton.Visibility"
                          Value="Collapsed" />
                </VisualState.Setters>
              </VisualState>
            </not_skia:VisualStateGroup>

            <!--Network-->
            <VisualStateGroup>
              <VisualState>
                <VisualState.StateTriggers>
                  <toolkit:NetworkConnectionStateTrigger ConnectionState="Connected" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                  <Setter Target="disconnectAlert.Visibility"
                          Value="Collapsed" />
                </VisualState.Setters>
              </VisualState>
              <VisualState>
                <VisualState.StateTriggers>
                  <toolkit:NetworkConnectionStateTrigger ConnectionState="Disconnected" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                  <Setter Target="disconnectAlert.Visibility"
                          Value="Visible" />
                </VisualState.Setters>
              </VisualState>
            </VisualStateGroup>

          </VisualStateManager.VisualStateGroups>

          <NavigationView x:Name="navigation"
                          Grid.Row="1"
                          IsBackButtonVisible="Collapsed"
                          IsPaneToggleButtonVisible="True"
                          IsSettingsVisible="False"
                          IsPaneVisible="True"
                          MenuItemsSource="{x:Bind ViewModel.DesktopCategories}"
                          SelectedItem="{x:Bind ViewModel.SelectedCategory, Mode=TwoWay}"
                          SelectionChanged="OnNavigation_SelectionChanged">

            <NavigationView.Resources>
              <ResourceDictionary>
                <ResourceDictionary.ThemeDictionaries>
                  <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="NavigationViewContentBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush"
                                     Color="Transparent" />
                  </ResourceDictionary>
                </ResourceDictionary.ThemeDictionaries>
              </ResourceDictionary>
            </NavigationView.Resources>

            <not_skia:NavigationView.PaneCustomContent>
              <Button x:Name="userButton"
                      Background="Transparent"
                      BorderThickness="0"
                      BorderBrush="Transparent"
                      HorizontalAlignment="Stretch"
                      Margin="4"
                      Padding="12,8"
                      HorizontalContentAlignment="Left"
                      Command="{x:Bind ViewModel.Login}">
                <Button.Flyout>
                  <MenuFlyout x:Name="userFlyout">
                    <MenuFlyoutItem Text="{cme:Localize Name=Settings}"
                                    Icon="{toolkit:FontIcon Glyph=&#xE713;}"
                                    Padding="100, 16"
                                    Command="{x:Bind ViewModel.GoToSettings}" />

                    <MenuFlyoutItem Text="{cme:Localize Name=Logout}"
                                    Padding="100, 16"
                                    Icon="{toolkit:FontIcon Glyph=&#xF3B1;}"
                                    Command="{x:Bind ViewModel.Logout}">
                    </MenuFlyoutItem>
                  </MenuFlyout>
                </Button.Flyout>

                <StackPanel x:Name="desktopPerson"
                            Orientation="Horizontal"
                            Spacing="8">
                  <PersonPicture ProfilePicture="{x:Bind ViewModel.User.Photo, Mode=OneWay}"
                                 DisplayName="{x:Bind ViewModel.User.Name, Mode=OneWay}"
                                 Height="48" />
                  <TextBlock Text="{cme:Localize Name=ClickToLogin}"
                             Visibility="{x:Bind ViewModel.IsLoggedIn, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                             VerticalAlignment="Center" />
                  <TextBlock Text="{x:Bind ViewModel.User.Name, Mode=OneWay}"
                             Visibility="{x:Bind ViewModel.IsLoggedIn, Mode=OneWay, Converter={StaticResource TrueToVisibleConverter}}"
                             VerticalAlignment="Center" />
                </StackPanel>
              </Button>
            </not_skia:NavigationView.PaneCustomContent>

            <NavigationView.MenuItemTemplate>
              <DataTemplate x:DataType="models:NavigationCategory">
                <NavigationViewItem Content="{x:Bind Text}"
                                    Padding="0,12"
                                    ToolTipService.ToolTip="{x:Bind Text}">
                  <!--ToolTip="{x:Bind Tooltip}">-->
                  <NavigationViewItem.Icon>
                    <FontIcon Glyph="{x:Bind Glyph}" />
                  </NavigationViewItem.Icon>
                </NavigationViewItem>
              </DataTemplate>
            </NavigationView.MenuItemTemplate>

            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <Frame x:Name="Frame"
                     x:FieldModifier="public" />

              <InfoBar x:Name="disconnectAlert"
                       Title="You are offline"
                       Severity="Error"
                       IsClosable="False"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Center"
                       Margin="0,0,0,12"
                       CornerRadius="28"
                       IsOpen="True">
                <InfoBar.IconSource>
                  <FontIconSource Glyph="&#xF384;" />
                </InfoBar.IconSource>
              </InfoBar>

              <utu:TabBar x:Name="navigationBar"
                          ItemsSource="{x:Bind ViewModel.DesktopCategories}"
                          SelectedItem="{x:Bind ViewModel.SelectedCategory, Mode=TwoWay}"
                          Background="{ThemeResource CardBackground}"
                          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                          Visibility="Collapsed"
                          CornerRadius="0"
                          Grid.Row="1">
                <utu:TabBar.ItemTemplate>
                  <DataTemplate x:DataType="models:NavigationCategory">
                    <StackPanel Spacing="4">
                      <FontIcon Glyph="{x:Bind Glyph}"
                                FontSize="20" />
                      <!--<TextBlock Text="{x:Bind Text}" />-->
                    </StackPanel>
                  </DataTemplate>
                </utu:TabBar.ItemTemplate>
              </utu:TabBar>
            </Grid>
          </NavigationView>

        </Grid>
      </UserControl>

    </comp:PageShell.ContentView>
  </comp:PageShell>
</Page>
